/*
 * Copyright (C) 2013 Motorola Mobility LLC
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/* reserve memory for ram_console */
/memreserve/ 0x83000000 0x20000; /* IMAGE_DOWN_LOAD_ADDR */

/include/ "omap36xx.dtsi"

/ {
	model = "Motorola OMAP3 Platform";
	compatible = "mot,omap3-mapphone", "ti,omap3";

	ramoops {
		compatible = "ramoops";
		status = "ok";

		android,ramoops-buffer-start = <0x83000000>;
		android,ramoops-buffer-size  = <0x20000>;
		android,ramoops-console-size = <0x1FC00>;
		android,ramoops-annotate-size = <0x400>;
	};

	cpus {
		cpu@0 {
			device_type = "cpu";
			operating-points = <
				/* kHz    uV */
				 300000   975000
				 600000  1150000
				 800000  1275000
				1000000  1337500
			>;
			/* TODO: cpu0-supply = <&???>; */
			/* OPP tolerance in percentage */
			voltage-tolerance = <0>;
			reset-voltage = <1275000>;
		};
	};

	regulators {
		compatible = "simple-bus";

		vmmc: fixedregulator {
			compatible = "regulator-fixed";
			regulator-name = "vmmc";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
		};

	};

	/* external 26MHz clock which is controlled by gpio
	 * it's used for both Display Bridge and USB
	 */
	periph_26mhz {
		compatible = "gpio-clock";
		#clock-cells = <0>;
		enable-gpios = <&gpio6 17 0>;  /* GPIO-177, OF_GPIO_ACTIVE_HIGH */
	};

	Display@0 {
		compatible = "mot,minnow-panel-dsi-cm";
		bridge-supply = <&ldo1_reg>;
		panel-supply = <&ldo7_reg>;
		/* 0: MINNOW_PANEL_CM_220X176
		 * 1: MINNOW_PANEL_CM_220X220
		 * 2: MINNOW_PANEL_CM_BRIDGE_320X320
		 */
		id_panel = <2>;
		gpio_panel_reset = <&gpio1 14 0>;       /* RESET gpio-14 */
		gpio_bridge_reset = <&gpio1 23 0>;      /* RESET gpio-23 */
		gpio_vsync_events = <&gpio1 29 0>;      /* VSYNC gpio-29 */
		clk_in = "periph_26mhz";        /* external 26MHz clock */
		/* declare it if ext_te enable */
		//gpio_te = <&gpio1 0 0>;       /* EXT_TE gpio-0 */
		//pins = <0 1 2 3>;             /* DSI Pin config */
		esd_interval = <8000>;          /* ESD_INTERVAL */
		support_smart_ambient;
		ambient_timeout = <0>;		/* time out in second */
		//pixel_clock = <4608>;         /* kHZ = 320*240*60/1000*/
		/* 0: RGB888
		 * 1: RGB666
		 * 2: RGB666_PACKED
		 * 3: RGB565
		 */
		//pixel_format = <1>;
		//hs_clk = <90000000 150000000>;        /* min max*/
		//lp_clk = <7000000 9000000>;   /* min max*/
		//pinctrl-names = "viopulldown", "viooutput";
		//pinctrl-0 = <&display_vddio_pulldown>;
		//pinctrl-1 = <&display_vddio_output>;
	};

	vib-gpio {
		compatible = "mot,vib-gpio";
		gpio = <181>;
		active_low = <0>;
		vib-gpio-supply = <&ldo6_reg>;
	};

	cpcap_phy: cpcap-usb@0 {
		compatible = "mot,cpcap-usb";
	};

	pmic-wdi@0 {
		compatible = "mot,pmic-wdi";
		gpios  = <&gpio5 15 0x0>, /* gpio-143 GPIOF_DIR_OUT|GPIOF_INIT_LOW */
			 <&gpio3 30 0x0>; /* gpio-94  GPIOF_DIR_OUT|GPIOF_INIT_LOW */
		gpio-names = "wdi",
			     "sys_reset";
		//pinctrl-names = "output", "tristate";
		//pinctrl-0 = <&wdi_phy_gpio_mode>;
		//pinctrl-1 = <&wdi_phy_safe_mode>;
	};

	pad-wkup {
		/* on omap, the irqs are calculated as follows:
		 * for the 96 intc IRQs
		 *   irq = 16 + irq_offset (from TRM sec 12.3.2)
		 * for a gpio IRQ (banks numbered 1 to 6
		 *   irq = 16 + 96 + (gpio_bank - 1) * 32
		 */
		compatible = "ti,pad-wkup";

		/* Map the pad offset (off) to an interrupt (IRQ).    */
		/* if handle is 1, an irq will be generated based on  */
		/* the pad wkup bit.  If 0, the pad will be used only */
		/* for reporting, assumingly because the domain will  */
		/* be in a state during suspend to generate the IRQ   */
		/* directly.                                          */
		/* generic_handle_irq() will be called for multiple   */
		/* wakeup sources, but only the first in the order    */
		/* listed below will be reported as the wakeup reason */
		/*                                                    */
		/*             off  IRQ handle                        */
		ti,pad_irq = <0x144  89 1>, /* uart2 - bluetooth      */
		             <0x16e  90 1>, /* uart3 - serial rx      */
		             <0x0a2  96 1>, /* uart4 - m4 rx          */
		             <0x08e 171 1>, /* m4sensor hub           */
		             <0x0e6 211 1>, /* touch                  */
		             <0x140 254 1>, /* USB                    */
		             <0x1a2 288 1>, /* bq5105x charger        */
			     <0x1b0 112 0>, /* gpio0 - tps (dbg only) */
		             <0x5bc 134 1>, /* bq5105x charger pulse  */
		             <0x13c 252 1>; /* battery                */
	};

};

&vc {
	ti,i2c-high-speed;
	ti,i2c-pad-load = <3>;
	vc_mpu{
		ti,master-channel;
	};

	vc_core{
		ti,use-master-slave-addr;
	};
};

&usbhshost {
// Just enable OTG.
};


&glbl_prm {
	status = "ok";
	sys_clk = "osc_sys_ck";
	autoextclkmode = <2>;
	sys_off_mode;
	auto_off;
	auto_retention;
	offmodesetup_time = <3500>;
	clksetup_time = <1000>;
};

&i2c1 {
	clock-frequency = <400000>;
};

&i2c2 {
	clock-frequency = <400000>;
	akm8973 {
		reg = <0x1c>;
		compatible = "mot,akm8973";
		gpio-irq = <175>;
		gpio-reset = <28>;
	};
};

&i2c3 {
	clock-frequency = <400000>;
	lm3554 {
		reg = <0x53>;
		compatible = "mot,lm3554";
		flags = <0x1>;
		torch_brightness_def = <0xa0>;
		flash_brightness_def = <0x30>;
		flash_duration_def = <0x28>;
		config_reg_1_def = <0xe0>;
		config_reg_2_def = <0xf0>;
		vin_monitor_def = <0x00>;
		gpio_reg_def = <0x0>;
	};
};

&omap3_pmx_core {
	pinctrl-names = "default";
	pinctrl-0 = <
		&board_pins
		//&audio_gpio_pins
		//&usb_phy_pins
	>;

	board_pins: pinmux_board_pins {
		pinctrl-single,pins = <
			0x000 0x500
			0x002 0x100
			0x004 0x100
			0x006 0x100
			0x008 0x100
			0x00a 0x100
			0x00c 0x100
			0x00e 0x100
			0x010 0x100
			0x012 0x100
			0x014 0x100
			0x016 0x100
			0x018 0x100
			0x01a 0x100
			0x01c 0x100
			0x01e 0x100
			0x020 0x100
			0x022 0x100
			0x024 0x100
			0x026 0x100
			0x028 0x100
			0x02a 0x100
			0x02c 0x100
			0x02e 0x100
			0x030 0x100
			0x032 0x100
			0x034 0x100
			0x036 0x100
			0x038 0x100
			0x03a 0x100
			0x03c 0x100
			0x03e 0x100
			0x040 0x100
			0x042 0x100
			0x044 0x100
			0x046 0x100
			0x048 0x100
			0x04a 0x451f
			0x04c 0x451f
			0x04e 0x451f
			0x050 0x451c
			0x052 0x471f
			0x054 0x451c
			0x056 0x451f
			0x058 0x451f
			0x05a 0x11f
			0x05c 0x11c
			0x05e 0x118
			0x060 0x118
			0x062 0x118
			0x064 0x118
			0x066 0x118
			0x068 0x118
			0x06a 0x118
			0x06c 0x118
			0x06e 0x118
			0x070 0x118
			0x072 0x118
			0x074 0x118
			0x076 0x118
			0x078 0x118
			0x07a 0x118
			0x07c 0x118
			0x07e 0x100
			0x080 0x100
			0x082 0x11f
			0x084 0x11f
			0x086 0x11f
			0x088 0x11f
			0x08a 0x11f
			0x08c 0x11f
			0x08e 0x004
			0x090 0x100
			0x092 0x100
			0x094 0x100
			0x096 0x100
			0x098 0x100
			0x09a 0x100
			0x09c 0x118
			0x09e 0x11f
			0x0a0 0x00c
			0x0a2 0x11c
			0x0a4 0x11f
			0x0a6 0x11f
			0x0a8 0x11f
			0x0aa 0x11f
			0x0ac 0x201
			0x0ae 0x201
			0x0b0 0x201
			0x0b2 0x201
			0x0b4 0x201
			0x0b6 0x201
			0x0b8 0x11f
			0x0ba 0x11f
			0x0bc 0x11f
			0x0be 0x11f
			0x0c0 0x11f
			0x0c2 0x11f
			0x0c4 0x11f
			0x0c6 0x11f
			0x0c8 0x11f
			0x0ca 0x11f
			0x0cc 0x11f
			0x0ce 0x11f
			0x0d0 0x11f
			0x0d2 0x11f
			0x0d4 0x11f
			0x0d6 0x11f
			0x0d8 0x104
			0x0da 0x004
			0x0dc 0x100
			0x0de 0x100
			0x0e0 0x100
			0x0e2 0x100
			0x0e4 0x004
			0x0e6 0x104
			0x0e8 0x451f
			0x0ea 0x100
			0x0ec 0x100
			0x0ee 0x100
			0x0f0 0x100
			0x0f2 0x100
			0x0f4 0x100
			0x0f6 0x100
			0x0f8 0x100
			0x0fa 0x100
			0x0fc 0x100
			0x0fe 0x4504
			0x100 0x11f
			0x102 0x11f
			0x104 0x10f
			0x106 0x10f
			0x108 0x10f
			0x10a 0x10f
			0x10c 0x108
			0x10e 0x108
			0x110 0x108
			0x112 0x008
			0x114 0x000
			0x116 0x118
			0x118 0x118
			0x11a 0x118
			0x11c 0x118
			0x11e 0x118
			0x128 0x100
			0x12a 0x118
			0x12c 0x118
			0x12e 0x118
			0x130 0x118
			0x132 0x118
			0x134 0x004
			0x136 0x105
			0x138 0x10d
			0x13a 0x10d
			0x13c 0x10d
			0x13e 0x10d
			0x140 0x10d
			0x142 0x10d
			0x144 0x118
			0x146 0x000
			0x148 0x000
			0x14a 0x118
			0x14c 0x000
			0x14e 0x000
			0x150 0x410d
			0x152 0x108
			0x154 0x10d
			0x156 0x10d
			0x158 0x10d
			0x15a 0x10d
			0x15c 0x10a /* MCBSP1_CLKR, MODE2 | PD | INPUT */
			0x15e 0x101
			0x160 0x00a
			0x162 0x10a
			0x164 0x11c
			0x166 0x10a
			0x168 0x10a /* MCBSP1_CLKX, MODE2 | PD | INPUT */
			0x16a 0x104
			0x16c 0x01c
			0x16e 0x5718
			0x170 0x000
			0x172 0x108
			0x174 0x118
			0x176 0x108
			0x178 0x108
			0x17a 0x108
			0x17c 0x108
			0x17e 0x108
			0x180 0x108
			0x182 0x108
			0x184 0x108
			0x186 0x108
			0x188 0x108
			0x18a 0x118
			0x18c 0x118
			0x18e 0x118
			0x190 0x118
			0x192 0x118
			0x194 0x118
			0x196 0x700
			0x198 0x118 /* MCSPI1_CLK, muxdump value: MODE1 | INPUT | PULL_UP | PUD_ENABLED (0x119), 2.6.32 value: MODE0 | INPUT | PULL_UP | PUD_ENABLED (0x118), minnow value: MODE0 | INPUT (0x100) */
			0x19a 0x000 /* MCSPI1_SIMO, muxdump value: MODE1 | INPUT | PULL_UP | PUD_ENABLED (0x119), minnow + 2.6.32 value: MODE0 | OUTPUT (0x000) */
			0x19c 0x118 /* MCSPI1_SOMI, muxdump value: MODE1 | INPUT | PULL_UP | PUD_ENABLED (0x119), 2.6.32 value: MODE0 | INPUT | PULL_UP | PUD_ENABLED (0x118), minnow value: MODE0 | INPUT (0x100) */
			0x19e 0x000 /* MCSPI1_CS0, muxdump value: MODE1 | INPUT | PULL_UP | PUD_ENABLED (0x119), minnow + 2.6.32 value: MODE0 | OUTPUT (0x000) */
			0x1a0 0x10c /* MCSPI1_CS1, muxdump value: MODE4 | INPUT | PUD_ENABLED (0x10c), 2.6.32 value: MODE4 | INPUT (0x104), minnow value: MODE0 | OUTPUT (0x000) */
			0x1a2 0x01f /* MCSPI1_CS2, muxdump value: MODE7 | INPUT | PULL_UP | PUD_ENABLED (0x01f), 2.6.32 value: MODE4 | OUTPUT | PUD_ENABLED (0x00c), minnow value: MODE4 | INPUT | OFFWAKEUP (0x4104) */
			0x1a4 0x11f /* MCSPI1_CS3, muxdump value: MODE7 | INPUT | PULL_UP | PUD_ENABLED (0x11f), 2.6.32 value: MODE4 | INPUT (0x104), minnow value: MODE4 | OUTPUT (0x004) */
			0x1a8 0x000
			0x1aa 0x4508
			0x1ac 0x000
			0x1ae 0x11c /* MCSPI2_CS1, MODE4 | INPUT | PULL_UP | PUD_ENABLED, minnow value: MODE4 | OUTPUT */
			0x1b2 0x004
			0x5a8 0x102
			0x5aa 0x11a
			0x5ac 0x11f
			0x5ae 0x104
			0x5b0 0x4104
			0x5b2 0x11a
			0x5b4 0x11a
			0x5b6 0x11a
			0x5b8 0x11a
			0x5ba 0x004
			0x5bc 0x104
			0x5be 0x004
			0x5c0 0x100
			0x5c2 0x100
			0x5c4 0x100
			0x5c6 0x100
			0x5c8 0x004
			0x5ca 0x103
			0x1b4 0x108
			0x1b6 0x108
			0x1b8 0x108
			0x1ba 0x108
			0x1bc 0x108
			0x1be 0x108
			0x1c0 0x108
			0x1c2 0x108
			0x1c4 0x108
			0x1c6 0x108
			0x1c8 0x108
			0x1ca 0x108
			0x1cc 0x108
			0x1ce 0x108
			0x1d0 0x108
			0x1d2 0x108
			0x1d4 0x108
			0x1d6 0x108
			0x1d8 0x108
			0x1da 0x108
			0x1dc 0x108
			0x1de 0x108
			0x1e0 0x108
			0x1e2 0x108
			0x1e4 0x108
			0x1e6 0x108
			0x1e8 0x108
			0x1ea 0x108
			0x1ec 0x108
			0x1ee 0x108
			0x1f0 0x108
			0x1f2 0x108
			0x1f4 0x108
			0x1f6 0x108
			0x1f8 0x108
			0x1fa 0x108
			0x1fc 0x108
			0x1fe 0x108
			0x200 0x100
			0x202 0x118
			0x204 0x100
			0x206 0x100
			0x208 0x108
			0x20a 0x100
			0x20c 0x100
			0x20e 0x100
			0x210 0x100
			0x212 0x100
			0x214 0x100
			0x216 0x100
			0x218 0x108
			0x21a 0x100
			0x21c 0x100
			0x21e 0x108
			0x220 0x118
			0x222 0x100
			0x224 0x118
			0x226 0x108
			0x228 0x100
			0x22a 0x108
			0x22c 0x100
			0x22e 0x100
			0x230 0x100
			0x232 0x000
			0x234 0x000
		>;
	};

	cpcap_pins: pinux_cpcap_pins {
		pinctrl-single,pins = <
			0x1b0 0x570c /* SYS_NIRQ */
		>;
	};

	uart2_pins_default: pinmux_uart_pins_default@2 {
		pinctrl-single,pins = <
			0x144 0x4100	/* UART2_CTS, MODE0  | OUTPUT | OFFWAKEUP */
			0x146 0x000	/* UART2_RTS, MODE0 | OUTPUT */
			0x148 0x000	/* UART2_TX, MODE0 | OUTPUT */
			0x14a 0x100	/* UART2_RX, MODE0 | INPUT */
		>;
	};

	uart2_pins_idle: pinmux_uart_pins_idle@2 {
		pinctrl-single,pins = <
			0x144 0x4100	/* UART2_CTS, MODE0  | OUTPUT | OFFWAKEUP */
			0x146 0x004	/* UART2_RTS, MODE4 | OUTPUT */
			0x148 0x000	/* UART2_TX, MODE0 | OUTPUT */
			0x14a 0x100	/* UART2_RX, MODE0 | INPUT */
		>;
	};
};

&omap3_pmx_wkup{
	pinctrl-names = "default";
	pinctrl-0 = <&wkup_pins>;

	wkup_pins: pinmux_wakeup_pins {
		pinctrl-single,pins = <
			0x000 0x118
			0x002 0x118
			0x004 0x100
			0x006 0x100
			0x008 0x118
			0x00a 0x5700
			0x00c 0x100
			0x00e 0x100
			0x010 0x100
			0x012 0x100
			0x014 0x004
			0x016 0x118
			0x018 0x004
			0x01a 0x4704
			0x01c 0x108
			0x01e 0x108
			0x020 0x118
			0x022 0x118
			0x024 0x007
			0x026 0x001
			0x04c 0x108
			0x04e 0x000
			0x050 0x000
			0x054 0x000
			0x056 0x118
			0x058 0x118
			0x05a 0x118
		>;
	};
};

&mcspi1 {
	clock-frequency = <3000000>;

	cpcap {
		compatible = "mot,cpcap";
		reg = <0>; /* CS 0 */
		spi-max-frequency = <3000000>;
		spi-cs-high;

		pinctrl-names = "default";
		pinctrl-0 = <&cpcap_pins>;
		irq-gpio = <0>; /* SYS_NIRQ = GPIO0 */

		regulators {
			#address-cells = <1>;
			#size-cells = <0>;

			sw1_iva_reg: regulator@0 {
				reg = <0>;
				regulator-compatible = "DCDC1";
				regulator-name = "DCDC1";
				regulator-min-microvolt =  <700000>;
				regulator-max-microvolt = <1487500>;
				regulator-boot-on;
				regulator-always-on;
			};

			sw2_reg: regulator@1 {
				reg = <1>;
				regulator-compatible = "DCDC2";
				regulator-name = "DCDC2";
				regulator-min-microvolt = <3000000>;
				regulator-max-microvolt = <3000000>;
				regulator-boot-on;
				regulator-always-on;
			};

			sw3_reg: regulator@2 {
				reg = <2>;
				regulator-compatible = "DCDC3";
				regulator-name = "DCDC3";
				regulator-min-microvolt = <1875000>;
				regulator-max-microvolt = <1875000>;
				regulator-boot-on;
				regulator-always-on;
			};

			sw4_core_reg: regulator@3 {
				reg = <3>;
				regulator-compatible = "DCDC4";
				regulator-name = "DCDC4";
				regulator-min-microvolt = <500000>;
				regulator-max-microvolt = <1287500>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo1_reg: regulator@4 {
				reg = <4>;
				regulator-compatible = "LDO1";
				regulator-name = "LDO1";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1200000>;
			};

			ldo2_reg: regulator@5 {
				reg = <5>;
				regulator-compatible = "LDO2";
				regulator-name = "LDO2";
				regulator-min-microvolt = <1700000>;
				regulator-max-microvolt = <1700000>;
			};

			ldo3_reg: regulator@6 {
				reg = <6>;
				regulator-compatible = "LDO3";
				regulator-name = "LDO3";
				regulator-min-microvolt = <2950000>;
				regulator-max-microvolt = <2950000>;
			};

			ldo4_reg: regulator@7 {
				reg = <7>;
				regulator-compatible = "LDO4";
				regulator-name = "LDO4";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
			};

			ldo5_reg: regulator@8 {
				reg = <8>;
				regulator-compatible = "LDO5";
				regulator-name = "LDO5";
				regulator-min-microvolt = <2800000>;
				regulator-max-microvolt = <2800000>;
				regulator-always-on;
			};

			ldo6_reg: regulator@9 {
				reg = <9>;
				regulator-compatible = "LDO6";
				regulator-name = "LDO6";
				regulator-min-microvolt = <2400000>;
				regulator-max-microvolt = <2400000>;
			};

			ldo7_reg: regulator@10 {
				reg = <10>;
				regulator-compatible = "LDO7";
				regulator-name = "LDO7";
				regulator-min-microvolt = <2850000>;
				regulator-max-microvolt = <2850000>;
			};

			ldo8_reg: regulator@11 {
				reg = <11>;
				regulator-compatible = "LDO8";
				regulator-name = "LDO8";
				regulator-min-microvolt = <2800000>;
				regulator-max-microvolt = <2800000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo9_reg: regulator@12 {
				reg = <12>;
				regulator-compatible = "LDO9";
				regulator-name = "LDO9";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1200000>;
			};

			ldo10_reg: regulator@13 {
				reg = <13>;
				regulator-compatible = "LDO10";
				regulator-name = "LDO10";
				regulator-min-microvolt = <2500000>;
				regulator-max-microvolt = <2500000>;
				regulator-always-on;
			};
		};
	};
};

/* leave gpio bank interface clocks on during suspend
 * to avoid race condition in gpio_irq_handler */
&gpio1 {
	ti,no_idle_on_suspend;
};

&gpio2 {
	ti,no_idle_on_suspend;
};

&gpio3 {
	ti,no_idle_on_suspend;
};

&gpio4 {
	ti,no_idle_on_suspend;
};

&gpio5 {
	ti,no_idle_on_suspend;
};

&gpio6 {
	ti,no_idle_on_suspend;
};

/* external */
&mmc1 {
	status = "okay";
	vmmc-supply = <&vmmc>;
	bus-width = <4>;
};

/* internal */
&mmc2 {
	ti,non-removable;
	bus-width = <8>;
	vmmc-supply = <&ldo5_reg>;
	vmmc_aux-supply = <&sw3_reg>;
};

/* wireless */
&mmc3 {
	ti,non-removable;
	cap-power-off-card;
	bus-width = <4>;
	vmmc-supply = <&vmmc>;
	wl_host_wake_gpio = <65>;
	wifi_pmena = <186>;
};

&usb_otg_hs {
	interface-type = <0>;
	usb-phy = <&cpcap_phy>;
	mode = <3>;
	power = <50>;

};
/* c55 */
&uart1 {
	flags = <0x00200000>;
	open_close_pm;
	autosuspend-delay = <50>; /* ms */
};
/* bluetooth */
&uart2 {
	flags = <0x00200000>;
	ti,no-pm-qos;
	wakeup-capable;
	autosuspend-delay = <100>; /* ms */
	timed-wakelock = <150>; /* ms */
	rx_trig = <32>;

	/* rts_gpio HACK */
	gpios = <&gpio5 17 2>; /* gpio_145 (uart_rts) GPIOF_DIR_OUT|GPIOF_INIT_HIGH */
	pinctrl-names = "default", "idle";
	pinctrl-0 = <&uart2_pins_default>;
	pinctrl-1 = <&uart2_pins_idle>;

	resume-noidle;
};
/* serial console */
&uart3 {
	wakeup-capable;
	autosuspend-delay = <3000>; /* ms */
};

